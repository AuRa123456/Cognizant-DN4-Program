-- scenario 1
CREATE OR REPLACE TRIGGER UpdateCustomerLastModified
BEFORE UPDATE ON Customers
FOR EACH ROW
BEGIN
  :NEW.LastModified := SYSDATE;
END;

-- scenario 2
CREATE TABLE AuditLog (
  LogID NUMBER GENERATED BY DEFAULT AS IDENTITY,
  Action VARCHAR2(50),
  LogDate DATE DEFAULT SYSDATE
);

CREATE OR REPLACE TRIGGER LogTransaction
AFTER INSERT ON Transactions
FOR EACH ROW
BEGIN
  INSERT INTO AuditLog(Action) VALUES ('Inserted transaction ID: ' || :NEW.TransactionID);
END;

-- scenario 3
CREATE OR REPLACE TRIGGER CheckTransactionRules
BEFORE INSERT ON Transactions
FOR EACH ROW
DECLARE
  v_balance NUMBER;
BEGIN
  IF :NEW.TransactionType = 'Withdrawal' THEN
    SELECT Balance INTO v_balance FROM Accounts WHERE AccountID = :NEW.AccountID;
    IF v_balance < :NEW.Amount THEN
      RAISE_APPLICATION_ERROR(-20001, 'Insufficient funds');
    END IF;
  ELSIF :NEW.Amount <= 0 THEN
    RAISE_APPLICATION_ERROR(-20002, 'Amount must be positive');
  END IF;
END;